document.addEventListener("DOMContentLoaded",function(){const elements={audioPlayer:document.getElementById("audio-player"),playPauseBtn:document.getElementById("play-pause-btn"),playIcon:document.getElementById("play-icon"),pauseIcon:document.getElementById("pause-icon"),prevBtn:document.getElementById("prev-btn"),nextBtn:document.getElementById("next-btn"),playModeBtn:document.getElementById("play-mode-btn"),modeIcon:document.getElementById("mode-icon"),progressBar:document.getElementById("progress-bar"),progress:document.getElementById("progress"),currentTimeElement:document.getElementById("current-time"),totalTimeElement:document.getElementById("total-time"),songTitleElement:document.getElementById("song-title"),songArtistElement:document.getElementById("song-artist"),lyricsSongTitleElement:document.getElementById("lyrics-song-title"),lyricsSongArtistElement:document.getElementById("lyrics-song-artist"),coverImage:document.getElementById("cover-image"),albumCover:document.getElementById("album-cover"),songsListDesktop:document.getElementById("songs-list-desktop"),songsListMobile:document.getElementById("songs-list-mobile"),albumsList:document.getElementById("albums-list"),cloudBtn:document.getElementById("cloud-btn"),coverPage:document.getElementById("cover-page"),lyricsPage:document.getElementById("lyrics-page"),mobileSongsCollapse:document.getElementById("mobile-songs-collapse"),mobileSongsContainer:document.getElementById("mobile-songs-container"),commentsToggleBtn:document.getElementById("comments-toggle-btn"),walineContainer:document.getElementById("waline"),backToTopBtn:document.getElementById("back-to-top"),lyricsContainer:document.querySelector(".lyrics-container"),lyricsContent:document.querySelector(".lyrics-content")};let currentSongIndex=0,isPlaying=!1,playMode=0,currentAlbumId=null,filteredSongs=window.localMusicList||[],currentLyrics=[],currentLyricIndex=-1,currentPage="cover",currentLoadedMetadataHandler=null,currentErrorHandler=null;function initLazyLoading(){"IntersectionObserver"in window?(window.imageObserver=new IntersectionObserver((entries,observer)=>{entries.forEach(entry=>{if(entry.isIntersecting){const img=entry.target,src=img.getAttribute("data-src");src&&(img.src=src,img.removeAttribute("data-src"),img.onload=()=>{img.style.opacity="0",img.style.transition="opacity 0.3s",img.classList.add("lazy-loaded"),requestAnimationFrame(()=>{img.style.opacity="1"})},observer.unobserve(img))}})},{rootMargin:"50px 0px",threshold:.01}),document.querySelectorAll("img[data-src]").forEach(img=>{window.imageObserver.observe(img)})):function(){const lazyImages=document.querySelectorAll("img[data-src]");let scrollTimeout,resizeTimeout;function loadVisibleImages(){lazyImages.forEach(img=>{if(img.getAttribute("data-src")){const rect=img.getBoundingClientRect();if(rect.top<=window.innerHeight&&rect.bottom>=0&&rect.left<=window.innerWidth&&rect.right>=0){const src=img.getAttribute("data-src");img.src=src,img.removeAttribute("data-src"),img.onload=()=>{img.style.opacity="0",img.style.transition="opacity 0.3s",img.classList.add("lazy-loaded"),requestAnimationFrame(()=>{img.style.opacity="1"})}}}});0===document.querySelectorAll("img[data-src]").length&&(window.removeEventListener("scroll",loadVisibleImages),window.removeEventListener("resize",loadVisibleImages))}loadVisibleImages(),window.addEventListener("scroll",()=>{scrollTimeout&&clearTimeout(scrollTimeout),scrollTimeout=setTimeout(()=>{loadVisibleImages()},200)}),window.addEventListener("resize",()=>{resizeTimeout&&clearTimeout(resizeTimeout),resizeTimeout=setTimeout(()=>{loadVisibleImages()},200)})}()}function filterSongsByAlbum(albumId){if(albumId!==currentAlbumId)if(albumId.startsWith("netease_playlist_")){currentAlbumId=albumId;const playlistConfig=neteasePlaylists.find(playlist=>playlist.id===albumId);if(!playlistConfig)return elements.songsListDesktop.innerHTML='<div class="song-item"><div class="song-details"><div class="song-name">未找到网易云歌单配置</div></div></div>',void(elements.songsListMobile.innerHTML='<div class="song-item"><div class="song-details"><div class="song-name">未找到网易云歌单配置</div></div></div>');elements.songsListDesktop.innerHTML='<div class="song-item"><div class="song-details"><div class="song-name">正在加载网易云歌单...</div></div></div>',elements.songsListMobile.innerHTML='<div class="song-item"><div class="song-details"><div class="song-name">正在加载网易云歌单...</div></div></div>',fetch("https://music.zhheo.com/meting-api/?server=netease&type=playlist&id="+playlistConfig.playlistId+"&r="+Math.random()).then(response=>response.json()).then(data=>{if(data&&data.length>0){if(filteredSongs=data.map((song,index)=>({name:song.name||"未知歌曲",artist:song.artist||"未知艺术家",src:song.url||"",cover:song.pic||"img/default.jpg",id:`netease_${playlistConfig.id}_${index}`,neteaseId:song.id,lrc:song.lrc})),resetSongsListAnimation(),renderSongsListWithAnimation(),filteredSongs.length>0){const currentSong=elements.audioPlayer.src;filteredSongs.some(song=>song.src===currentSong)||(currentSongIndex=0,loadSong(filteredSongs[currentSongIndex]),isPlaying&&elements.audioPlayer.addEventListener("loadedmetadata",function onLoaded(){playSong(),elements.audioPlayer.removeEventListener("loadedmetadata",onLoaded)}))}}else elements.songsListDesktop.innerHTML='<div class="song-item"><div class="song-details"><div class="song-name">加载网易云歌单失败</div></div></div>',elements.songsListMobile.innerHTML='<div class="song-item"><div class="song-details"><div class="song-name">加载网易云歌单失败</div></div></div>'}).catch(error=>{console.error("加载网易云歌单失败:",error),elements.songsListDesktop.innerHTML='<div class="song-item"><div class="song-details"><div class="song-name">加载网易云歌单失败</div></div></div>',elements.songsListMobile.innerHTML='<div class="song-item"><div class="song-details"><div class="song-name">加载网易云歌单失败</div></div></div>'})}else{if(currentAlbumId=albumId,musicAlbums){const album=musicAlbums.find(album=>album.id===albumId);album&&(filteredSongs=[...album.songs])}if(resetSongsListAnimation(),renderSongsListWithAnimation(),filteredSongs.length>0){const currentSong=elements.audioPlayer.src;filteredSongs.some(song=>song.src===currentSong)||(currentSongIndex=0,loadSong(filteredSongs[currentSongIndex]),isPlaying&&elements.audioPlayer.addEventListener("loadedmetadata",function onLoaded(){playSong(),elements.audioPlayer.removeEventListener("loadedmetadata",onLoaded)}))}}}function resetSongsListAnimation(){const songsListDesktop=elements.songsListDesktop,songsListMobile=elements.songsListMobile;songsListDesktop.style.animation="none",songsListMobile.style.animation="none",songsListDesktop.offsetWidth,songsListMobile.offsetWidth,songsListDesktop.style.animation="slideInUp 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)",songsListMobile.style.animation="slideInUp 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275)"}function renderSongsListWithAnimation(){if(elements.songsListDesktop.innerHTML="",elements.songsListMobile.innerHTML="",0===filteredSongs.length){const emptyMessage=document.createElement("div");return emptyMessage.className="song-item",emptyMessage.innerHTML='\n                        <div class="song-details">\n                            <div class="song-name">暂无歌曲</div>\n                        </div>\n                    ',elements.songsListDesktop.appendChild(emptyMessage),void elements.songsListMobile.appendChild(emptyMessage.cloneNode(!0))}const desktopFragment=document.createDocumentFragment(),mobileFragment=document.createDocumentFragment();filteredSongs.forEach((song,index)=>{const isCurrentSong=elements.audioPlayer.src.includes(song.src);isCurrentSong&&(currentSongIndex=index);const songHTML=`\n                        <div class="song-number">${index+1}</div>\n                        <div class="song-details">\n                            <div class="song-name">${song.name}</div>\n                            <div class="song-artist-name">${song.artist||song.id}</div>\n                        </div>\n                    `,desktopItem=document.createElement("div");desktopItem.className="song-item",desktopItem.dataset.index=index,isCurrentSong&&desktopItem.classList.add("active"),desktopItem.innerHTML=songHTML,desktopFragment.appendChild(desktopItem);const mobileItem=desktopItem.cloneNode(!0);mobileFragment.appendChild(mobileItem)}),elements.songsListDesktop.appendChild(desktopFragment),elements.songsListMobile.appendChild(mobileFragment),function(){const desktopSongs=elements.songsListDesktop.querySelectorAll(".song-item"),mobileSongs=elements.songsListMobile.querySelectorAll(".song-item");[...desktopSongs,...mobileSongs].forEach((song,index)=>{song.style.animation="none",song.style.opacity="0",song.offsetWidth,song.style.animation=`fadeInRight 0.5s ease-out ${.05*index}s both`})}()}function handleSongClick(event){const songItem=event.target.closest(".song-item");if(!songItem)return;const index=parseInt(songItem.dataset.index);isNaN(index)||index<0||index>=filteredSongs.length||(currentSongIndex=index,showLoadingState(),loadSong(filteredSongs[currentSongIndex]),elements.audioPlayer.addEventListener("loadedmetadata",function onLoaded(){hideLoadingState(),playSong(),elements.audioPlayer.removeEventListener("loadedmetadata",onLoaded)}),elements.audioPlayer.addEventListener("error",function onError(){hideLoadingState(),showErrorMessage("音频加载失败，请检查网络连接"),elements.audioPlayer.removeEventListener("error",onError)}))}function showLoadingState(){if(elements.playPauseBtn.classList.add("loading"),elements.playIcon.style.display="none",elements.pauseIcon.style.display="none",!elements.playPauseBtn.querySelector(".loading-indicator")){const loader=document.createElement("div");loader.className="loading-indicator",loader.innerHTML='<svg class="svg-icon" style="animation: spin 1s linear infinite;"><use href="#icon-play"></use></svg>',elements.playPauseBtn.appendChild(loader)}}function hideLoadingState(){elements.playPauseBtn.classList.remove("loading");const loader=elements.playPauseBtn.querySelector(".loading-indicator");loader&&loader.remove(),isPlaying?(elements.playIcon.style.display="none",elements.pauseIcon.style.display="block"):(elements.playIcon.style.display="block",elements.pauseIcon.style.display="none")}function showErrorMessage(message){const errorToast=document.createElement("div");errorToast.className="error-toast",errorToast.innerHTML=`\n                    <i class="fa fa-exclamation-circle"></i>\n                    <span>${message}</span>\n                `,document.body.appendChild(errorToast),setTimeout(()=>{errorToast.classList.add("fade-out"),setTimeout(()=>{errorToast.parentNode&&errorToast.parentNode.removeChild(errorToast)},300)},3e3)}function loadSong(song){if(!song)return;showLoadingState(),elements.songTitleElement.textContent=song.name,elements.songArtistElement.textContent=song.artist||song.id,elements.lyricsSongTitleElement.textContent=song.name,elements.lyricsSongArtistElement.textContent=song.artist||song.id;let songCover="img/1.jpg";if(song.cover)songCover=song.cover;else if(currentAlbumId&&musicAlbums){const album=musicAlbums.find(album=>album.id===currentAlbumId);if(album&&album.cover)songCover=album.cover;else for(const album of musicAlbums)if(album.songs&&album.songs.some(s=>s.src===song.src)&&album.cover){songCover=album.cover;break}}"img/default.jpg"!==songCover?(elements.coverImage.removeAttribute("src"),elements.coverImage.setAttribute("data-src",songCover),!function(el){const rect=el.getBoundingClientRect();return rect.top>=0&&rect.left>=0&&rect.bottom<=(window.innerHeight||document.documentElement.clientHeight)&&rect.right<=(window.innerWidth||document.documentElement.clientWidth)}(elements.coverImage)&&window.imageObserver?window.imageObserver.observe(elements.coverImage):(elements.coverImage.src=songCover,elements.coverImage.removeAttribute("data-src"),elements.coverImage.onload=()=>{elements.coverImage.style.opacity="0",elements.coverImage.style.transition="opacity 0.3s",elements.coverImage.classList.add("lazy-loaded"),requestAnimationFrame(()=>{elements.coverImage.style.opacity="1"})})):elements.coverImage.src=songCover,elements.audioPlayer.src=song.src,function(){document.querySelectorAll(".song-item.active").forEach(item=>item.classList.remove("active"));document.querySelectorAll(`.song-item[data-index="${currentSongIndex}"]`).forEach(item=>item.classList.add("active"))}(),async function(songName,albumId){currentLyrics=[],currentLyricIndex=-1,elements.lyricsContent&&(elements.lyricsContent.innerHTML='<div class="lyrics-empty">加载歌词中...</div>');try{neteasePlaylists&&neteasePlaylists.some(playlist=>playlist.id===albumId)?await async function(songName){try{const currentSong=filteredSongs[currentSongIndex];if(!currentSong)throw new Error("无法获取当前歌曲信息");if(console.log("当前歌曲信息:",currentSong),currentSong.lrc){console.log("使用歌曲对象中的歌词URL:",currentSong.lrc);const lyricResponse=await fetch(currentSong.lrc),lyricText=await lyricResponse.text();if(lyricText&&""!==lyricText.trim()&&!lyricText.includes("error")&&!lyricText.includes("暂无歌词"))return currentLyrics=parseLRC(lyricText),console.log(`成功加载歌词，歌词行数: ${currentLyrics.length}`),void renderLyrics()}let songId=currentSong.neteaseId;if(!songId){console.log("未找到保存的歌曲ID，通过搜索API获取");const searchUrl=`https://music.zhheo.com/meting-api/?server=netease&type=search&id=${encodeURIComponent(songName)}`,searchResponse=await fetch(searchUrl),searchData=await searchResponse.json();if(!searchData||0===searchData.length)throw new Error("未找到歌曲信息");if(songId=searchData[0].id,!songId)throw new Error("无法获取歌曲ID")}console.log(`获取歌词，歌曲ID: ${songId}`);const lyricUrl=`https://music.zhheo.com/meting-api/?server=netease&type=lrc&id=${songId}`,lyricResponse=await fetch(lyricUrl),lyricText=await lyricResponse.text();if(!lyricText||""===lyricText.trim()||lyricText.includes("error")||lyricText.includes("暂无歌词")){console.log("主API无歌词，尝试备用API");const backupLyricUrl=`https://api.injahow.cn/meting/?type=lrc&id=${songId}`,backupResponse=await fetch(backupLyricUrl),backupText=await backupResponse.text();if(!backupText||""===backupText.trim()||backupText.includes("error")||backupText.includes("暂无歌词"))throw new Error("该歌曲暂无歌词");currentLyrics=parseLRC(backupText)}else currentLyrics=parseLRC(lyricText);console.log(`成功加载歌词，歌词行数: ${currentLyrics.length}`),renderLyrics()}catch(error){throw console.error("加载网易云歌词失败:",error),elements.lyricsContent&&(elements.lyricsContent.innerHTML=`<div class="lyrics-empty">歌词加载失败: ${error.message}</div>`),error}}(songName):await async function(songName,albumId){try{"undefined"!=typeof console&&console.log&&console.log("尝试加载歌词: 歌曲名="+songName+", 专辑ID="+albumId);let albumName="";if("dy"===albumId?albumName="2024 In Tokyo live":"1701"===albumId?albumName="1701":"gs"===albumId?albumName="勾三搭四":"io"===albumId?albumName="IO":"kj"===albumId?albumName="看见":"bjb"===albumId?albumName="北京不插电":"fg"===albumId?albumName="梵高先生":"bjj"===albumId?albumName="被禁忌的游戏":"gt"===albumId?albumName="工体东路没有人":"IMAGINE"===albumId?albumName="IMAGINE":"nh"===albumId?albumName="你好，郑州":"dj"===albumId?albumName="动静":"gj"===albumId?albumName="108个关键词":"zg"===albumId?albumName="这个世界会好吗":"zy"===albumId?albumName="在每一条伤心的应天大街上":"wa"===albumId?albumName="我爱南京":"ej"===albumId?albumName="二零零九年十月十六日事件":"dyy"===albumId?albumName="电声与管弦乐":"dye"===albumId?albumName="电声与管弦乐II":"js"===albumId?albumName="爵士乐与不插电":"8"===albumId?albumName="8":"f"===albumId?albumName="F":("洗心革面"===albumId||"xx"===albumId)&&(albumName="洗心革面"),!albumName)throw new Error(`未知专辑: ${albumId}`);let response,lrcPath="lrc/"+albumName+"/"+songName+".lrc";"undefined"!=typeof console&&console.log&&console.log("歌词文件路径: "+lrcPath);try{if(response=await fetch(lrcPath),!response.ok){const absolutePath=window.location.origin+"/"+lrcPath;"undefined"!=typeof console&&console.log&&console.log("尝试绝对路径: "+absolutePath),response=await fetch(absolutePath)}if(!response.ok){const basePathLrc=window.location.pathname.split("/").slice(0,-1).join("/")+"/"+lrcPath;"undefined"!=typeof console&&console.log&&console.log("尝试基于页面路径: "+basePathLrc),response=await fetch(basePathLrc)}if(!response.ok){const cacheBusterPath=lrcPath+"?t="+Date.now();"undefined"!=typeof console&&console.log&&console.log("尝试带缓存破坏参数: "+cacheBusterPath),response=await fetch(cacheBusterPath)}}catch(fetchError){"undefined"!=typeof console&&console.warn&&console.warn("歌词文件加载失败: "+fetchError.message),response={ok:!1,status:404}}if(!response.ok){if("勾三搭四"===albumName){const specialFiles=["你的早晨&天空之城&暧昧","杭州&我们不能失去信仰"];for(const specialFile of specialFiles)if(specialFile.includes(songName)){lrcPath="lrc/"+albumName+"/"+specialFile+".lrc","undefined"!=typeof console&&console.log&&console.log("尝试特殊歌词文件路径: "+lrcPath);try{if(response=await fetch(lrcPath),!response.ok){const absolutePath=window.location.origin+"/"+lrcPath;response=await fetch(absolutePath)}if(!response.ok){const basePathLrc=window.location.pathname.split("/").slice(0,-1).join("/")+"/"+lrcPath;response=await fetch(basePathLrc)}if(!response.ok){const cacheBusterPath=lrcPath+"?t="+Date.now();response=await fetch(cacheBusterPath)}if(response.ok)break}catch(error){"undefined"!=typeof console&&console.warn&&console.warn("特殊歌词文件加载失败: "+error.message)}}}if(!response.ok){let modifiedSongName=songName.replace(/（/g,"(").replace(/）/g,")");if(modifiedSongName!==songName){lrcPath="lrc/"+albumName+"/"+modifiedSongName+".lrc","undefined"!=typeof console&&console.log&&console.log("尝试修改后的歌词文件路径: "+lrcPath);try{if(response=await fetch(lrcPath),!response.ok){const absolutePath=window.location.origin+"/"+lrcPath;response=await fetch(absolutePath)}if(!response.ok){const basePathLrc=window.location.pathname.split("/").slice(0,-1).join("/")+"/"+lrcPath;response=await fetch(basePathLrc)}if(!response.ok){const cacheBusterPath=lrcPath+"?t="+Date.now();response=await fetch(cacheBusterPath)}}catch(error){console.warn(`修改后的歌词文件加载失败: ${error.message}`)}}}if(!response.ok){const encodedSongName=encodeURIComponent(songName);lrcPath="lrc/"+encodeURIComponent(albumName)+"/"+encodedSongName+".lrc","undefined"!=typeof console&&console.log&&console.log("尝试URL编码后的歌词文件路径: "+lrcPath);try{if(response=await fetch(lrcPath),!response.ok){const absolutePath=window.location.origin+"/"+lrcPath;response=await fetch(absolutePath)}if(!response.ok){const basePathLrc=window.location.pathname.split("/").slice(0,-1).join("/")+"/"+lrcPath;response=await fetch(basePathLrc)}if(!response.ok){const cacheBusterPath=lrcPath+"?t="+Date.now();response=await fetch(cacheBusterPath)}}catch(error){console.warn(`URL编码后的歌词文件加载失败: ${error.message}`)}}}if(!response.ok)return console.warn(`歌词文件不存在: ${lrcPath}, 状态码: ${response.status}`),currentLyrics=[],void renderLyrics();const lrcText=await response.text();if(console.log(`歌词文件内容长度: ${lrcText.length}`),!lrcText||""===lrcText.trim())return console.warn(`歌词文件为空: ${lrcPath}`),currentLyrics=[],void renderLyrics();currentLyrics=parseLRC(lrcText),console.log(`解析后的歌词数量: ${currentLyrics.length}`),renderLyrics()}catch(error){console.error("加载本地歌词失败:",error),currentLyrics=[],renderLyrics()}}(songName,albumId),0===currentLyrics.length&&elements.lyricsContent&&(elements.lyricsContent.innerHTML='<div class="lyrics-empty">暂无歌词</div>')}catch(error){console.error("加载歌词失败:",error),elements.lyricsContent&&(elements.lyricsContent.innerHTML='<div class="lyrics-empty">歌词加载失败</div>')}}(song.name,currentAlbumId),updateLyricsIndicator(),currentErrorHandler&&elements.audioPlayer.removeEventListener("error",currentErrorHandler),currentLoadedMetadataHandler&&elements.audioPlayer.removeEventListener("loadedmetadata",currentLoadedMetadataHandler),currentErrorHandler=handleAudioError,elements.audioPlayer.addEventListener("error",currentErrorHandler),currentLoadedMetadataHandler=function(){hideLoadingState(),function(){const duration=elements.audioPlayer.duration;duration&&!isNaN(duration)&&(elements.totalTimeElement.textContent=formatTime(duration))}()},elements.audioPlayer.addEventListener("loadedmetadata",currentLoadedMetadataHandler)}function handleAudioError(event){hideLoadingState();const error=event.target.error;let errorMessage="音频加载失败";switch(error.code){case error.MEDIA_ERR_ABORTED:errorMessage="音频加载被中止";break;case error.MEDIA_ERR_NETWORK:errorMessage="网络错误，音频加载失败";break;case error.MEDIA_ERR_DECODE:errorMessage="音频解码失败";break;case error.MEDIA_ERR_SRC_NOT_SUPPORTED:errorMessage="音频格式不支持";break;default:errorMessage="音频加载失败，请检查网络连接"}showErrorMessage(errorMessage),console.error("音频加载错误:",error)}function playSong(){if(0===filteredSongs.length)return;showLoadingState();const playPromise=elements.audioPlayer.play();if(void 0!==playPromise)playPromise.then(()=>{hideLoadingState(),isPlaying=!0,elements.playIcon.style.display="none",elements.pauseIcon.style.display="block",elements.albumCover.classList.add("playing")}).catch(error=>{hideLoadingState(),console.error("播放失败:",error);let errorMessage="播放失败";errorMessage="NotAllowedError"===error.name?"浏览器阻止了自动播放，请点击播放按钮":"NotSupportedError"===error.name?"音频格式不支持":"播放失败，请重试",showErrorMessage(errorMessage)});else try{elements.audioPlayer.play(),isPlaying=!0,elements.playIcon.style.display="none",elements.pauseIcon.style.display="block",elements.albumCover.classList.add("playing"),hideLoadingState()}catch(error){hideLoadingState(),console.error("播放失败:",error),showErrorMessage("播放失败，请重试")}}function nextSong(){if(0!==filteredSongs.length){if(1===playMode){const randomIndex=Math.floor(Math.random()*filteredSongs.length);currentSongIndex=randomIndex}else 2===playMode||(currentSongIndex=(currentSongIndex+1)%filteredSongs.length);2!==playMode?(loadSong(filteredSongs[currentSongIndex]),elements.audioPlayer.addEventListener("loadedmetadata",function onLoaded(){playSong(),elements.audioPlayer.removeEventListener("loadedmetadata",onLoaded)})):playSong()}}function prevSong(){if(0!==filteredSongs.length){if(1===playMode){const randomIndex=Math.floor(Math.random()*filteredSongs.length);currentSongIndex=randomIndex}else 2===playMode||(currentSongIndex=(currentSongIndex-1+filteredSongs.length)%filteredSongs.length);2!==playMode?(loadSong(filteredSongs[currentSongIndex]),elements.audioPlayer.addEventListener("loadedmetadata",function onLoaded(){playSong(),elements.audioPlayer.removeEventListener("loadedmetadata",onLoaded)})):playSong()}}function updateProgress(){const{duration:duration,currentTime:currentTime}=elements.audioPlayer;if(duration&&!isNaN(duration)){const progressPercent=currentTime/duration*100;elements.progress.style.width=`${progressPercent}%`}!function(){const currentTime=elements.audioPlayer.currentTime;elements.currentTimeElement.textContent=formatTime(currentTime)}(),syncLyrics()}function formatTime(seconds){const minutes=Math.floor(seconds/60),remainingSeconds=Math.floor(seconds%60);return`${minutes.toString().padStart(2,"0")}:${remainingSeconds.toString().padStart(2,"0")}`}function setProgress(e){const width=elements.progressBar.clientWidth,rect=elements.progressBar.getBoundingClientRect(),clickX=e.clientX-rect.left,duration=elements.audioPlayer.duration;if(duration){const seekTime=clickX/width*duration;elements.audioPlayer.currentTime=seekTime}}function togglePlayMode(){switch(playMode=(playMode+1)%4,playMode){case 0:elements.modeIcon.innerHTML='<path d="M8 20V21.9324C8 22.2086 7.77614 22.4324 7.5 22.4324C7.38303 22.4324 7.26977 22.3914 7.17991 22.3165L3.06093 18.8841C2.84879 18.7073 2.82013 18.392 2.99691 18.1799C3.09191 18.0659 3.23264 18 3.38103 18L18 18C19.1046 18 20 17.1045 20 16V7.99997H22V16C22 18.2091 20.2091 20 18 20H8ZM16 3.99997V2.0675C16 1.79136 16.2239 1.5675 16.5 1.5675C16.617 1.5675 16.7302 1.60851 16.8201 1.68339L20.9391 5.11587C21.1512 5.29266 21.1799 5.60794 21.0031 5.82008C20.9081 5.93407 20.7674 5.99998 20.619 5.99998L6 5.99997C4.89543 5.99997 4 6.8954 4 7.99997V16H2V7.99997C2 5.79083 3.79086 3.99997 6 3.99997H16Z"/>',elements.playModeBtn.style.backgroundColor="transparent",elements.playModeBtn.style.color="var(--text-secondary)";break;case 1:elements.modeIcon.innerHTML='<path d="M17 3.99998V2.0675C17 1.79136 17.2239 1.5675 17.5 1.5675C17.617 1.5675 17.7302 1.60851 17.8201 1.68339L21.9391 5.11587C22.1512 5.29266 22.1799 5.60794 22.0031 5.82008C21.9081 5.93407 21.7674 5.99998 21.619 5.99998H2V3.99998H17ZM2 18H22V20H2V18ZM2 11H22V13H2V11Z"/>',elements.playModeBtn.style.backgroundColor="transparent",elements.playModeBtn.style.color="var(--text-secondary)";const existingDot=elements.playModeBtn.querySelector(".loop-dot");existingDot&&existingDot.remove();break;case 2:elements.modeIcon.innerHTML='<path d="M18 17.8832V16L23 19L18 22V19.9095C14.9224 19.4698 12.2513 17.4584 11.0029 14.5453L11 14.5386L10.9971 14.5453C9.57893 17.8544 6.32508 20 2.72483 20H2V18H2.72483C5.52503 18 8.05579 16.3312 9.15885 13.7574L9.91203 12L9.15885 10.2426C8.05579 7.66878 5.52503 6 2.72483 6H2V4H2.72483C6.32508 4 9.57893 6.14557 10.9971 9.45473L11 9.46141L11.0029 9.45473C12.2513 6.5416 14.9224 4.53022 18 4.09051V2L23 5L18 8V6.11684C15.7266 6.53763 13.7737 8.0667 12.8412 10.2426L12.088 12L12.8412 13.7574C13.7737 15.9333 15.7266 17.4624 18 17.8832Z"/>',elements.playModeBtn.style.backgroundColor="transparent",elements.playModeBtn.style.color="var(--text-secondary)";break;case 3:elements.modeIcon.innerHTML='<path d="M8 20V21.9325C8 22.2086 7.77614 22.4325 7.5 22.4325C7.38303 22.4325 7.26977 22.3915 7.17991 22.3166L3.06093 18.8841C2.84879 18.7073 2.82013 18.392 2.99691 18.1799C3.09191 18.0659 3.23264 18 3.38103 18L18 18C19.1046 18 20 17.1046 20 16V8H22V16C22 18.2091 20.2091 20 18 20H8ZM16 2.0675C16 1.79136 16.2239 1.5675 16.5 1.5675C16.617 1.5675 16.7302 1.60851 16.8201 1.68339L20.9391 5.11587C21.1512 5.29266 21.1799 5.60794 21.0031 5.82008C20.9081 5.93407 20.7674 5.99998 20.619 5.99998L6 6C4.89543 6 4 6.89543 4 8V16H2V8C2 5.79086 3.79086 4 6 4H16V2.0675ZM11 8H13V16H11V10H9V9L11 8Z"/>',elements.playModeBtn.style.backgroundColor="transparent",elements.playModeBtn.style.color="var(--text-secondary)"}}function showCloudQRCode(){const qrModal=document.createElement("div");qrModal.className="qr-modal",qrModal.innerHTML='\n                    <div class="qr-modal-content">\n                        <div class="qr-modal-header">\n                            <h3>上传歌曲至网易云盘</h3>\n                            <button class="qr-modal-close">&times;</button>\n                        </div>\n                        <div class="qr-modal-body">\n                            <img src="img/xcx.jpg" alt="云盘二维码" class="qr-code-image">\n                            <p>扫码使用小程序上传歌曲</p>\n                            <p><a href="https://mp.weixin.qq.com/s/pHsFSPTn3Cd7MXV81J4NHg" target="_blank" class="guide-button">使用指南</a></p>\n                        </div>\n                    </div>\n                ',document.body.appendChild(qrModal);qrModal.querySelector(".qr-modal-close").addEventListener("click",function(){qrModal.querySelector(".qr-modal-content").style.animation="modalBounceOut 0.4s ease-in forwards",setTimeout(()=>{document.body.removeChild(qrModal)},400)}),qrModal.addEventListener("click",function(e){if(e.target===qrModal){qrModal.querySelector(".qr-modal-content").style.animation="modalBounceOut 0.4s ease-in forwards",setTimeout(()=>{document.body.removeChild(qrModal)},400)}})}elements.audioPlayer.volume=.8;const eventListeners={playPause:null,prev:null,next:null,playMode:null,cloud:null,timeupdate:null,progressClick:null,ended:null,albumCover:null,songClickDesktop:null,songClickMobile:null,lyricsToggle:null};if(eventListeners.playPause=()=>{elements.playPauseBtn.classList.contains("loading")||(isPlaying?(elements.audioPlayer.pause(),isPlaying=!1,elements.playIcon.style.display="block",elements.pauseIcon.style.display="none",elements.albumCover.classList.remove("playing")):playSong())},elements.playPauseBtn.addEventListener("click",eventListeners.playPause),eventListeners.prev=prevSong,elements.prevBtn.addEventListener("click",eventListeners.prev),eventListeners.next=nextSong,elements.nextBtn.addEventListener("click",eventListeners.next),eventListeners.playMode=togglePlayMode,elements.playModeBtn.addEventListener("click",eventListeners.playMode),elements.playModeBtn.addEventListener("mouseenter",function(){this.style.background="rgba(212, 175, 55, 0.15)",this.style.color="var(--primary)",this.style.border="1px solid rgba(212, 175, 55, 0.4)",this.style.boxShadow="0 0 15px rgba(212, 175, 55, 0.3)",this.style.borderRadius="var(--radius-md)",this.style.transform="translateY(-2px)"}),elements.playModeBtn.addEventListener("mouseleave",function(){this.style.background="rgba(255, 255, 255, 0.05)",this.style.color="var(--text-secondary)",this.style.border="1px solid rgba(212, 175, 55, 0.2)",this.style.boxShadow="none",this.style.borderRadius="var(--radius-md)",this.style.transform="none"}),eventListeners.cloud=showCloudQRCode,elements.cloudBtn.addEventListener("click",eventListeners.cloud),eventListeners.timeupdate=updateProgress,elements.audioPlayer.addEventListener("timeupdate",eventListeners.timeupdate),eventListeners.ended=()=>{2===playMode?(elements.audioPlayer.currentTime=0,playSong()):nextSong()},elements.audioPlayer.addEventListener("ended",eventListeners.ended),eventListeners.progressClick=setProgress,elements.progressBar.addEventListener("click",eventListeners.progressClick),eventListeners.songClickDesktop=handleSongClick,elements.songsListDesktop.addEventListener("click",eventListeners.songClickDesktop),eventListeners.songClickMobile=handleSongClick,elements.songsListMobile.addEventListener("click",eventListeners.songClickMobile),window.addEventListener("beforeunload",function(){eventListeners.playPause&&elements.playPauseBtn.removeEventListener("click",eventListeners.playPause),eventListeners.prev&&elements.prevBtn.removeEventListener("click",eventListeners.prev),eventListeners.next&&elements.nextBtn.removeEventListener("click",eventListeners.next),eventListeners.playMode&&elements.playModeBtn.removeEventListener("click",eventListeners.playMode),eventListeners.cloud&&elements.cloudBtn.removeEventListener("click",eventListeners.cloud),eventListeners.timeupdate&&elements.audioPlayer.removeEventListener("timeupdate",eventListeners.timeupdate),eventListeners.progressClick&&elements.progressBar.removeEventListener("click",eventListeners.progressClick),eventListeners.ended&&elements.audioPlayer.removeEventListener("ended",eventListeners.ended),eventListeners.albumCover&&elements.albumCover.removeEventListener("click",eventListeners.albumCover),eventListeners.songClickDesktop&&elements.songsListDesktop.removeEventListener("click",eventListeners.songClickDesktop),eventListeners.songClickMobile&&elements.songsListMobile.removeEventListener("click",eventListeners.songClickMobile)}),musicAlbums&&musicAlbums.length>0&&(elements.albumsList.innerHTML="",neteasePlaylists&&neteasePlaylists.length>0&&neteasePlaylists.forEach(playlist=>{const albumItem=document.createElement("div");albumItem.className="album-item",albumItem.dataset.id=playlist.id,albumItem.innerHTML=`\n                                <div class="album-image">\n                                    <img data-src="${playlist.cover}" alt="${playlist.name}" loading="lazy">\n                                </div>\n                                <div class="album-info">\n                                    <h3 class="album-title">${playlist.name}</h3>\n                                </div>\n                            `,albumItem.addEventListener("click",()=>{filterSongsByAlbum(playlist.id)}),elements.albumsList.appendChild(albumItem)}),musicAlbums.forEach(album=>{const albumItem=document.createElement("div");albumItem.className="album-item",albumItem.dataset.id=album.id,albumItem.innerHTML=`\n                            <div class="album-image">\n                                <img data-src="${album.cover}" alt="${album.name}" loading="lazy">\n                            </div>\n                            <div class="album-info">\n                                <h3 class="album-title">${album.name}</h3>\n                            </div>\n                        `,albumItem.addEventListener("click",()=>{filterSongsByAlbum(album.id)}),elements.albumsList.appendChild(albumItem)}),initLazyLoading(),elements.albumsList.querySelectorAll(".album-item").forEach((album,index)=>{album.style.animation="none",album.style.opacity="0",album.offsetWidth,album.style.animation=`bounceIn 0.6s ease-out ${.1*index}s both`})),function(){if(!elements.mobileSongsCollapse||!elements.mobileSongsContainer)return;let isCollapsed=!1,isAnimating=!1,animationTimeout=null;const debouncedToggleCollapse=(func=function(){isAnimating||(isCollapsed=!isCollapsed,isAnimating=!0,requestAnimationFrame(()=>{isCollapsed?elements.mobileSongsContainer.classList.add("collapsed"):elements.mobileSongsContainer.classList.remove("collapsed"),setTimeout(()=>{isAnimating=!1},320)}))},wait=30,function(){const context=this,args=arguments;clearTimeout(animationTimeout),animationTimeout=setTimeout(()=>{func.apply(context,args)},wait)});var func,wait;elements.mobileSongsCollapse.addEventListener("click",function(){debouncedToggleCollapse()}),elements.mobileSongsContainer.querySelector(".songs-header").addEventListener("click",function(e){e.target.closest(".collapse-btn")||debouncedToggleCollapse()})}(),function(){let isDragging=!1;elements.progressBar.addEventListener("mousedown",function(e){isDragging=!0,elements.progressBar.classList.add("dragging"),setProgress(e)}),document.addEventListener("mousemove",function(e){if(isDragging){const width=elements.progressBar.clientWidth,rect=elements.progressBar.getBoundingClientRect(),moveX=e.clientX-rect.left,duration=elements.audioPlayer.duration;if(duration){const seekTime=Math.max(0,Math.min(width,moveX))/width*duration;elements.audioPlayer.currentTime=seekTime}}}),document.addEventListener("mouseup",function(){isDragging&&(isDragging=!1,elements.progressBar.classList.remove("dragging"))}),elements.progressBar.addEventListener("touchstart",function(e){isDragging=!0;const touch=e.touches[0],rect=elements.progressBar.getBoundingClientRect(),touchX=touch.clientX-rect.left,width=elements.progressBar.clientWidth,duration=elements.audioPlayer.duration;if(duration){const seekTime=Math.max(0,Math.min(width,touchX))/width*duration;elements.audioPlayer.currentTime=seekTime}}),document.addEventListener("touchmove",function(e){if(isDragging){const touch=e.touches[0],rect=elements.progressBar.getBoundingClientRect(),touchX=touch.clientX-rect.left,width=elements.progressBar.clientWidth,duration=elements.audioPlayer.duration;if(duration){const seekTime=Math.max(0,Math.min(width,touchX))/width*duration;elements.audioPlayer.currentTime=seekTime}}}),document.addEventListener("touchend",function(){isDragging&&(isDragging=!1,elements.progressBar.classList.remove("dragging"))})}(),elements.commentsToggleBtn&&elements.walineContainer){elements.walineContainer.classList.add("show");elements.commentsToggleBtn.childNodes[2].textContent=" 收起留言板 ",elements.commentsToggleBtn.classList.add("active"),elements.commentsToggleBtn.addEventListener("click",function(){const isHidden=!elements.walineContainer.classList.contains("show"),textNode=elements.commentsToggleBtn.childNodes[2];isHidden?(elements.walineContainer.classList.add("show"),textNode.textContent=" 收起留言板 ",elements.commentsToggleBtn.classList.add("active"),window.walineInitialized||(window.walineInitialized=!0)):(elements.walineContainer.classList.remove("show"),textNode.textContent=" 展开留言板 ",elements.commentsToggleBtn.classList.remove("active"))})}function togglePage(){"cover"===currentPage?(elements.coverPage.classList.remove("active"),elements.lyricsPage.classList.add("active"),currentPage="lyrics"):(elements.lyricsPage.classList.remove("active"),elements.coverPage.classList.add("active"),currentPage="cover")}function parseLRC(lrcText){const lines=lrcText.split("\n"),lyrics=[];for(let i=0;i<lines.length;i++){const line=lines[i].trim();if(!line)continue;const timeMatch=line.match(/\[(\d{1,2}):(\d{1,2})(?:\.(\d{2,3}))?\](.*)/);if(timeMatch){const minutes=parseInt(timeMatch[1]),seconds=parseInt(timeMatch[2]);let milliseconds=0;timeMatch[3]&&(milliseconds=2===timeMatch[3].length?10*parseInt(timeMatch[3]):parseInt(timeMatch[3]));const text=timeMatch[4].trim(),time=60*minutes+seconds+milliseconds/1e3;lyrics.push({time:time,text:text||"♪"})}}return lyrics.sort((a,b)=>a.time-b.time),lyrics}function updateLyricsIndicator(){const indicator1=document.getElementById("lyrics-indicator"),indicator2=document.getElementById("lyrics-indicator-2"),hasLyrics=!(!(currentLyrics.length>0)||1===currentLyrics.length&&"♪"===currentLyrics[0].text||1===currentLyrics.length&&"纯音乐"===currentLyrics[0].text||1===currentLyrics.length&&"无歌词"===currentLyrics[0].text);indicator1&&(hasLyrics?(indicator1.classList.add("active"),indicator1.title="有歌词"):(indicator1.classList.remove("active"),indicator1.title="无歌词")),indicator2&&(hasLyrics?(indicator2.classList.add("active"),indicator2.title="有歌词"):(indicator2.classList.remove("active"),indicator2.title="无歌词"))}function renderLyrics(){if(!elements.lyricsContent)return;if(elements.lyricsContent.classList.remove("single-line"),updateLyricsIndicator(),0===currentLyrics.length)return void(elements.lyricsContent.innerHTML='<div class="lyrics-empty">暂无歌词</div>');(1===currentLyrics.length||2===currentLyrics.length&&"♪"===currentLyrics[1].text||2===currentLyrics.length&&"纯音乐"===currentLyrics[1].text||2===currentLyrics.length&&"无歌词"===currentLyrics[1].text)&&elements.lyricsContent.classList.add("single-line");let lyricsHTML="";for(let i=0;i<currentLyrics.length;i++)lyricsHTML+=`<div class="lyrics-line" data-index="${i}" data-time="${currentLyrics[i].time}">${currentLyrics[i].text}</div>`;elements.lyricsContent.innerHTML=lyricsHTML,currentLyricIndex=-1,isPlaying&&syncLyrics()}function syncLyrics(){if(!elements.audioPlayer||0===currentLyrics.length)return;const currentTime=elements.audioPlayer.currentTime;let newLyricIndex=-1;for(let i=currentLyrics.length-1;i>=0;i--)if(currentTime>=currentLyrics[i].time){newLyricIndex=i;break}if(newLyricIndex!==currentLyricIndex){if(elements.lyricsContent.querySelectorAll(".lyrics-line").forEach(line=>{line.classList.remove("active","past","next","past-1","past-2","past-3","next-1","next-2","next-3")}),newLyricIndex>=0){const currentLine=elements.lyricsContent.querySelector(`.lyrics-line[data-index="${newLyricIndex}"]`);if(currentLine){currentLine.classList.add("active");for(let i=1;i<=3;i++){const pastLineIndex=newLyricIndex-i;if(pastLineIndex>=0){const pastLine=elements.lyricsContent.querySelector(`.lyrics-line[data-index="${pastLineIndex}"]`);pastLine&&pastLine.classList.add(`past-${i}`)}}for(let i=1;i<=3;i++){const nextLineIndex=newLyricIndex+i;if(nextLineIndex<currentLyrics.length){const nextLine=elements.lyricsContent.querySelector(`.lyrics-line[data-index="${nextLineIndex}"]`);nextLine&&nextLine.classList.add(`next-${i}`)}}const lyricsContainer=elements.lyricsContent,containerHeight=lyricsContainer.clientHeight,lineHeight=currentLine.clientHeight,scrollTo=currentLine.offsetTop-containerHeight/2+lineHeight/2;lyricsContainer.scrollTop=scrollTo}}currentLyricIndex=newLyricIndex}}elements.backToTopBtn&&(window.addEventListener("scroll",function(){window.scrollY>300?elements.backToTopBtn.classList.add("visible"):elements.backToTopBtn.classList.remove("visible")}),elements.backToTopBtn.addEventListener("click",function(){window.scrollTo({top:0,behavior:"smooth"})}),elements.backToTopBtn.addEventListener("keydown",function(e){"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),window.scrollTo({top:0,behavior:"smooth"}))})),neteasePlaylists&&neteasePlaylists.length>0?filterSongsByAlbum(neteasePlaylists[0].id):musicAlbums&&musicAlbums.length>0?filterSongsByAlbum(musicAlbums[0].id):function(){if(elements.songsListDesktop.innerHTML="",elements.songsListMobile.innerHTML="",0===filteredSongs.length){const emptyMessage=document.createElement("div");return emptyMessage.className="song-item",emptyMessage.innerHTML='\n                        <div class="song-details">\n                            <div class="song-name">暂无歌曲</div>\n                        </div>\n                    ',elements.songsListDesktop.appendChild(emptyMessage),void elements.songsListMobile.appendChild(emptyMessage.cloneNode(!0))}const desktopFragment=document.createDocumentFragment(),mobileFragment=document.createDocumentFragment();filteredSongs.forEach((song,index)=>{const isCurrentSong=elements.audioPlayer.src.includes(song.src);isCurrentSong&&(currentSongIndex=index);const songHTML=`\n                        <div class="song-number">${index+1}</div>\n                        <div class="song-details">\n                            <div class="song-name">${song.name}</div>\n                            <div class="song-artist-name">${song.artist||song.id}</div>\n                        </div>\n                    `,desktopItem=document.createElement("div");desktopItem.className="song-item",desktopItem.dataset.index=index,isCurrentSong&&desktopItem.classList.add("active"),desktopItem.innerHTML=songHTML,desktopFragment.appendChild(desktopItem);const mobileItem=desktopItem.cloneNode(!0);mobileFragment.appendChild(mobileItem)}),elements.songsListDesktop.appendChild(desktopFragment),elements.songsListMobile.appendChild(mobileFragment)}(),playMode=0,elements.modeIcon.innerHTML='<path d="M8 20V21.9324C8 22.2086 7.77614 22.4324 7.5 22.4324C7.38303 22.4324 7.26977 22.3914 7.17991 22.3165L3.06093 18.8841C2.84879 18.7073 2.82013 18.392 2.99691 18.1799C3.09191 18.0659 3.23264 18 3.38103 18L18 18C19.1046 18 20 17.1045 20 16V7.99997H22V16C22 18.2091 20.2091 20 18 20H8ZM16 3.99997V2.0675C16 1.79136 16.2239 1.5675 16.5 1.5675C16.617 1.5675 16.7302 1.60851 16.8201 1.68339L20.9391 5.11587C21.1512 5.29266 21.1799 5.60794 21.0031 5.82008C20.9081 5.93407 20.7674 5.99998 20.619 5.99998L6 5.99997C4.89543 5.99997 4 6.8954 4 7.99997V16H2V7.99997C2 5.79083 3.79086 3.99997 6 3.99997H16Z"/>',elements.playModeBtn.style.backgroundColor="transparent",elements.playModeBtn.style.color="var(--text-secondary)",filteredSongs.length>0&&loadSong(filteredSongs[0]),function(){if(!elements.albumCover||!elements.coverPage||!elements.lyricsPage)return;elements.albumCover.addEventListener("click",function(){togglePage()});const lyricsIndicator1=document.getElementById("lyrics-indicator"),lyricsIndicator2=document.getElementById("lyrics-indicator-2");lyricsIndicator1&&lyricsIndicator1.addEventListener("click",function(){"cover"===currentPage&&togglePage()});lyricsIndicator2&&lyricsIndicator2.addEventListener("click",function(){"cover"===currentPage&&togglePage()});elements.lyricsPage.addEventListener("click",function(e){if("lyrics"===currentPage){const progressBar=document.getElementById("progress-bar"),progressContainer=document.querySelector(".progress-container");if(e.target===progressBar||e.target===progressContainer||progressBar.contains(e.target)||progressContainer.contains(e.target))return;togglePage()}}),elements.coverPage.classList.add("active"),elements.lyricsPage.classList.remove("active"),currentPage="cover"}()});
